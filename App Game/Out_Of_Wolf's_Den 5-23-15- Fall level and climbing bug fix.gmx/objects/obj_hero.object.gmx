<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hero_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
mask_index = spr_hero_mask;
global.heroDeath = false;
global.heroState = 0;
global.herolives = 1;
global.coins = 0; 
global.gems = 0; 
global.scorepoints = 0; 
global.rage = 0; 
initialize_movement_entity(.5, 1, 0, .2, obj_wall);
image_speed = .13;
facing  = 1; 
Charging = 0;
Charged = 0; 
maxcharge = 90; 
myRunSpeed = 1.5;
myjumpheight = 6; 
DoubleTapRun = false; 
sound = false;
Jumped = false;
tmp = 0;
runP = false;
global.left_key_vert = 0;
global.right_key_vert = 0;
global.up_key_vert = 0;
global.down_key_vert = 0;
global.jump_key_vert = 0;
global.ability1_key_vert = 0;
global.ability2_key_vert = 0;
global.jumpr_key_vert =0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Double Tap Run
myRunSpeed = 1.5 
Charged = 0;
Charging = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// restart game
for (i = 0; i&lt;11; i++){       
    if (global.scorepoints &gt; global.lclhigh [i, 1]){   
        for (j = 10; j&gt;i; j--){
            global.lclhigh[j, 0] = global.lclhigh[j-1, 0];
            global.lclhigh[j, 1] = global.lclhigh[j-1, 1];
        }
        global.newHighscore = true;
        scr_highscore(global.scorepoints, "");
        room_goto(Highscores);        
    }
    else{
        game_restart();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///*Animations
//Animations for running
if global.heroState = 0 || tmp =0{
    if vspd &lt; 0{
        sprite_index = spr_hero_jump;
        mask_index = spr_hero_mask;
    }
    else if vspd &gt; 0{
     mask_index = spr_hero_mask;
           sprite_index = spr_hero_fall;
    } 
    else if hspd != 0{
      mask_index = spr_hero_mask;
          sprite_index = spr_hero_run;
    }
    else{
          mask_index = spr_hero_mask;
           sprite_index = spr_hero_stand;}
}

// Animations for Climbing
if global.heroState = 1{
mask_index = spr_hero_mask;
        sprite_index = spr_hero_climb;
    if vspd == 0 &amp;&amp; hspd == 0{
        image_speed = 0;
    }
    else
        image_speed = .13;
}
// Animations for death
if global.heroState = 2{
    if vspd != 0 &amp;&amp; sprite_index != spr_hero_death{
               mask_index = spr_hero_mask;
               sprite_index = spr_hero_fall;
               image_speed = .13;    
    }
    else 
         mask_index = spr_hero_mask;
          sprite_index = spr_hero_death;
        image_speed = .13;
}
// Animations for Anit gravity
if global.heroState = 3 || tmp = 3{ 
    if vspd &gt; 0{
                mask_index = spr_hero_mask;
               sprite_index = spr_hero_jump;
    }
    else if vspd &lt; 0{
        sprite_index = spr_hero_fall;
        mask_index = spr_hero_mask;
    } 
    else if hspd != 0{
          mask_index = spr_hero_mask;
          sprite_index = spr_hero_run;
    }
    else{
        sprite_index = spr_hero_stand;
        mask_index = spr_hero_mask;}
}
    else
        image_speed = .13;
        
        

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Basic Steps

scr_heroState();

if global.heroState = 2 &amp;&amp; alarm[0] == -1{
    alarm[0] = 200;
}
if (Charged == 0){
    myRunSpeed = 1.5
    myjumpheight = 6
    room_speed = 60;
}
// Jump sound
if global.keyJump &amp;&amp; !Jumped{
    Jumped = true;
    audio_play_sound(snd_Jump,1,false);
    audio_sound_gain(snd_Jump,.2,0);
}
if global.heroState = 0{
    if place_meeting(x,y+1,obj_wall){
        Jumped = false;
    }
}
else if global.heroState = 3{
    if place_meeting(x,y-1,obj_wall){
        Jumped = false;
    }
}

if global.keyFlip{
    if global.heroState = 0{
        global.heroState = 3;
    }
    else if global.heroState = 3 {
        global.heroState = 0;
    }
}
if global.heroState = 0{
    if view_angle[0] != 0 {
        view_angle[0] -= 18;
    }
}
if global.heroState = 3 {   
    if view_angle[0] != 180 {
        view_angle[0] += 18;  
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Not Climbing Collision
if global.heroState != 4{
    tmp = global.heroState;
}
if !place_meeting(x,y,obj_climb){
    if global.heroState = 1{
        global.heroState = 0;
    }
}
if place_meeting(x,y,obj_climb) &amp;&amp; global.heroState = 1 {
    if place_meeting(x,y+1,obj_wall){
        global.heroState = 0;
    }
}
if global.keyRun &amp;&amp; !runP{
    global.heroState = 4;
}
else{
    global.heroState = tmp;
    runP = false;
}
if Charged == 1{
    runP = true;
    scr_phantom();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Points above my head
if place_meeting(x,y+8,obj_wolf_1) &amp;&amp; obj_wolf_1.death = false{
    if !instance_exists(obj_points_adder){
        var myobj = instance_create(x,y,obj_points_adder);
    }
}
if place_meeting(x,y,obj_coin){
    if !instance_exists(obj_points_adder){
        var myobj = instance_create(x,y,obj_points_adder);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Animation End Checks (mainly death)
image_index = 0;

if global.heroState = 2 {
    global.herolives  -= 1;
    image_speed = 0;
    image_index = image_number - 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw buttons

draw_set_font(fnt_default);
draw_text(100,100, global.keyLeft)
draw_text(100,200, global.keyRight)
draw_text(100,300, global.keyUp)
draw_text(100,400, global.keyDown)
draw_text(100,500, global.keyJump)
draw_text(100,600,  global.keyRun )
draw_text(100,700, global.keyFlip )

draw_text(200,100, "global.keyLeft")
draw_text(200,200, "global.keyRight")
draw_text(200,300, "global.keyUp")
draw_text(200,400, "global.keyDown")
draw_text(200,500, "global.keyJump")
draw_text(200,600,  "global.keyRun" )
draw_text(200,700, "global.keyFlip" )
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
