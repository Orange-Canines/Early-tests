<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMutant1Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>mskPlayer</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>race = GenCont.race

scrSkills()
scrWeapons()
wep = 1
bwep = 0

ammo[0] = 999
ammo[1] = 50
ammo[2] = 0
ammo[3] = 0
ammo[4] = 0

maxhealth = 8
maxspeed = 4

level = 1
skillpoints = 0
kills = 0

//AREA STUFF
area = 1
subarea = 1
hard = 1

//race stuff
if race = 1
{
spr_idle = sprMutant1Idle
spr_walk = sprMutant1Walk
spr_hurt = sprMutant1Hurt
spr_dead = sprMutant1Dead
}
if race = 2
{
maxhealth = 10
spr_idle = sprMutant2Idle
spr_walk = sprMutant2Walk
spr_hurt = sprMutant2Hurt
spr_dead = sprMutant2Dead
}
if race = 3
{
spr_idle = sprMutant3Idle
spr_walk = sprMutant3Walk
spr_hurt = sprMutant3Hurt
spr_dead = sprMutant3Dead
}
if race = 4
{
maxhealth = 2
spr_idle = sprMutant4Idle
spr_walk = sprMutant4Walk
spr_hurt = sprMutant4Hurt
spr_dead = sprMutant4Dead
}
if race = 5
{
spr_idle = sprMutant5Idle
spr_walk = sprMutant5Walk
spr_hurt = sprMutant5Hurt
spr_dead = sprMutant5Dead
maxspeed = 5
}
my_health = maxhealth


//default shit
clicked = 0
wepangle = 0
wepflip = 1
angle = 0

rad = 0
can_shoot = 1
right = 1
wepright = 1
back = 1
wave = 0
roll = 0
friction = 0.4
image_speed = 0.4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with instance_create(x,y,Corpse)
{
mask_index = other.mask_index
motion_add(other.direction,other.speed)
speed += max(0,abs(other.my_health/5))
sprite_index = other.spr_dead
image_xscale = other.right
}

BackCont.kills = kills
BackCont.area = area
BackCont.subarea = subarea
BackCont.hard = hard
sound_play(sndPlayerDeath)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = 1

wepflip = -wepflip

if wep_type[wep] = 2
{
with instance_create(x,y,Shell)
{
sprite_index = sprShotShell
motion_add(point_direction(x,y,mouse_x,mouse_y)+other.right*100+random(40)-20,2+random(2))
}
sound_play(sndShotReload)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !place_meeting(x,y,Portal) and !instance_exists(GenCont) and !instance_exists(LevCont)
{if roll = 0
{if keyboard_check(ord("A")) or keyboard_check(vk_left)
hspeed -= 3
if keyboard_check(ord("D")) or keyboard_check(vk_right)
hspeed += 3
if keyboard_check(ord("W")) or keyboard_check(vk_up)
vspeed -= 3
if keyboard_check(ord("S")) or keyboard_check(vk_down)
vspeed += 3

if keyboard_check_pressed(vk_escape)
{
    game_restart();
}

if speed &gt; maxspeed
speed = maxspeed

if speed = 0
{if sprite_index != spr_hurt
sprite_index = spr_idle}
else
{if sprite_index != spr_hurt
sprite_index = spr_walk}
if sprite_index = spr_hurt
{if image_index &gt; 2
sprite_index = spr_idle}

if mouse_x &lt; x
right = -1
else if mouse_x &gt; x
right = 1

if mouse_y &lt; y
back = 1
else if mouse_y &gt; y
back = -1

if mouse_check_button_pressed(mb_right)
{
if race = 1
{direction = point_direction(x,y,mouse_x,mouse_y)
speed = 4
roll = 1
sound_play(sndRoll)
instance_create(x,y,Dust)}
if race = 2 and !instance_exists(CrystalShield)
{
if skill_got[5] = 1 and place_meeting(mouse_x,mouse_y,Floor) and !place_meeting(mouse_x,mouse_y,Wall)
{
x = mouse_x
y = mouse_y
}
instance_create(x,y,CrystalShield)
}
if race = 4
{
with Corpse
{
if image_speed = 0 and x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview and instance_number(enemy) &gt; 0
{
if !sound_isplaying(sndCorpseExplo)
sound_play(sndCorpseExplo)

instance_destroy()
instance_create(x,y,Scorchmark)
if Player.skill_got[5] = 1
{
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
instance_create(x+random(32)-16,y+random(32)-16,MeatExplosion)
}
instance_create(x,y,MeatExplosion)
}
}
}

if race = 5
{
with Tangle
instance_destroy()
with TangleSeed
instance_destroy()
with instance_create(x,y,TangleSeed)
{
motion_add(point_direction(x,y,mouse_x,mouse_y),12)
image_angle = direction
}
}


}
if mouse_check_button(mb_right)
{
if race = 3
{

if !sound_isplaying(sndEyesLoop) sound_loop(sndEyesLoop)

with enemy
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y))
}
}
with EnemyBullet1
{
if x &gt; view_xview and x &lt; view_xview+view_wview and y &gt; view_yview and y &lt; view_yview+view_hview
{
if place_free(x+lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180),y)
x += lengthdir_x(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
if place_free(x,y+lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180))
y += lengthdir_y(1+Player.skill_got[5],point_direction(x,y,Player.x,Player.y)+180)
}
}

}
}
else if sound_isplaying(sndEyesLoop) sound_stop(sndEyesLoop)
}
else
{
//rolling
speed = 6
angle += 40*right
instance_create(x+random(6)-3,y+random(6),Dust)

if angle &gt; 720 or -angle &gt; 720
{
angle = 0
roll = 0
}
}


if my_health &lt;= 0
instance_destroy()


//SHOOTING!! AWW YEAH

if !instance_exists(CrystalShield)
{

if mouse_check_button_pressed(mb_left) and wep_auto[wep] = 0 and ((wep_type[wep] = 0 or wep_type[wep] = 1) or can_shoot = 1)
clicked = 1

if ammo[wep_type[wep]] = 0 and mouse_check_button_pressed(mb_left) and wep_type[wep] != 0
{
clicked = 0
sound_play(sndEmpty)
}

if can_shoot = 1 and ammo[wep_type[wep]] &gt; 0
{
if wep_auto[wep] = 0 and clicked = 1
{
scrFire()
clicked = 0
}
if wep_auto[wep] = 1 and mouse_check_button(mb_left)
scrFire()
}
}

//SWAP DA WEPS
if (mouse_check_button_pressed(mb_middle) or keyboard_check_pressed(vk_space) or keyboard_check_pressed(ord("Q"))) and bwep != 0
{
var twep;
twep = wep

wep = bwep
bwep = twep
clicked = 0

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)
}

}


if rad &gt; level*60
{
if level &lt; 9
{
sound_play(sndLevelUp)
rad -= level*60
level += 1
instance_create(x,y,LevelUp)
skillpoints += 1
}
else
rad = level*60
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="WepPickup">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(ord("E"))
{
sound_play(sndWeaponPickup)
if bwep = 0
bwep = wep
else
{
with instance_create(other.x,other.y,WepPickup)
{
scrWeapons()
wep = other.wep
name = wep_name[wep]
sprite_index = wep_sprt[wep]
ammo = 0
}
}

wep = other.wep

dir = instance_create(x,y,PopupText)
dir.mytext = string(wep_name[wep])+"!"

if wep_type[wep] != 0
wepangle = 0
else if wepangle = 0
wepangle = choose(130,-130)

with other
instance_destroy()
}

if other.ammo &gt; 0 and wep_type[other.wep] != 0
{
ammo[wep_type[other.wep]] += typ_ammo[other.wep_type[other.wep]]*2
if ammo[wep_type[other.wep]] &gt; typ_amax[other.wep_type[other.wep]]
ammo[wep_type[other.wep]] = typ_amax[other.wep_type[other.wep]]


dir = instance_create(x,y,PopupText)
dir.mytext = "+"+string(typ_ammo[wep_type[other.wep]]*2)+" "+string(typ_name[wep_type[other.wep]])

other.ammo = 0
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_bounce_solid(true)</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if subarea &lt; 3
subarea += 1
else
{
if area &lt; 3
area += 1
else
area = 1
subarea = 1
}

hard += 1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if wep_type[wep] = 0
wepright = wepflip
else
wepright = right

if wep_type[wep] = 3
{
lasx = x
lasy = y
do {lasx += lengthdir_x(2,point_direction(x,y,mouse_x,mouse_y)) lasy += lengthdir_y(2,point_direction(x,y,mouse_x,mouse_y))}
until position_meeting(lasx,lasy,Wall)

draw_sprite_ext(sprLaserSight,-1,x,y,point_distance(x,y,lasx,lasy)/2+2,1,point_direction(x,y,mouse_x,mouse_y),c_white,1)
}

if back = 1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,mouse_x,mouse_y)+wepangle,c_white,1)
draw_sprite_ext(sprite_index,-1,x,y,right,1,angle,c_white,1)
if back = -1 and !instance_exists(CrystalShield)
draw_sprite_ext(wep_sprt[wep],0,x,y,1,wepright,point_direction(x,y,mouse_x,mouse_y)+wepangle,c_white,1)

if race = 3 and mouse_check_button(mb_right)
draw_sprite_ext(sprMindPower,wave*0.4,x,y,right,1,0,c_white,1)
wave += 1

if (window_get_fullscreen())
{
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
